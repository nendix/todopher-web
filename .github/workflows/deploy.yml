name: Build, Push Docker Image, and Create Release

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: todopher-web

jobs:
  build-and-release:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment variables
        run: |
          TAG=$(date +%Y%m%d%H%M%S)
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image using .env values
        run: |
          docker build \
            --build-arg DB_USER=${{ secrets.DB_USER }} \
            --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --build-arg DB_HOST=${{ secrets.DB_HOST }} \
            --build-arg DB_PORT=${{ secrets.DB_PORT }} \
            --build-arg DB_NAME=${{ secrets.DB_NAME }} \
            -t ghcr.io/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} .

      - name: Push Docker Image
        run: |
          docker push ghcr.io/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}

      - name: Create GitHub Release
        uses: actions/create-release@v1.1.4
        id: create_release
        with:
          tag_name: v${{ env.TAG }}
          release_name: "Release ${{ env.IMAGE_NAME }}:${{ env.TAG }}"
          body: |
            ### Docker image built and pushed:
            - To create and run the images, run:
            ```bash
            docker pull ghcr.io/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
            docker run -p 8080:8080 ghcr.io/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
            ```
            - To run the database:
            ```bash
            docker run -d --name <your_db_hostname> mysql:8.0
            ```
        draft: false
        prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
